
/* 
 * Piece-square tables for the regular eval function.
 */
const int material_values[] = {
    0, PAWN_VAL, KNIGHT_VAL, BISHOP_VAL, ROOK_VAL, QUEEN_VAL, KING_VAL, 0,
    0, PAWN_VAL, KNIGHT_VAL, BISHOP_VAL, ROOK_VAL, QUEEN_VAL, KING_VAL, 0, 0
};

int piece_square_values[BK+1][0x80] = {
    {}, {}, {}, {}, {}, {}, {}, {}, {}, // empties to get indexing right
    { // pawn
      0,  0,  0,  0,  0,  0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0,
     -5,  5, 15, 25, 25, 15,  5, -5, 0, 0, 0, 0, 0, 0, 0, 0,
    -15, -5, 10, 30, 30, 10, -5,-15, 0, 0, 0, 0, 0, 0, 0, 0,
    -15, -5, 15, 40, 40, 15, -5,-15, 0, 0, 0, 0, 0, 0, 0, 0,
    -15, -5, 15, 30, 30, 15, -5,-15, 0, 0, 0, 0, 0, 0, 0, 0,
    -15, -5, 10, 15, 15, 10, -5,-15, 0, 0, 0, 0, 0, 0, 0, 0,
    -15, -5,  5, 15, 15,  5, -5,-15, 0, 0, 0, 0, 0, 0, 0, 0,
      0,  0,  0,  0,  0,  0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0 },

    { // knight
    -50,-40,-30,-30,-30,-30,-40,-50,  0,  0,  0,  0,  0,  0,  0,  0,
    -40,-20,  0,  0,  0,  0,-20,-40,  0,  0,  0,  0,  0,  0,  0,  0,
    -30,  0, 10, 15, 15, 10,  0,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -30,  5, 15, 20, 20, 15,  5,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -30,  0, 15, 20, 20, 15,  0,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -30,  5, 10, 15, 15, 10,  5,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -40,-20,  0,  5,  5,  0,-20,-40,  0,  0,  0,  0,  0,  0,  0,  0,
    -50,-40,-30,-30,-30,-30,-40,-50,  0,  0,  0,  0,  0,  0,  0,  0 },

    { // bishop
    -30,-25,-20,-20,-20,-20,-25,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -25,  0,  0,  0,  0,  0,  0,-25,  0,  0,  0,  0,  0,  0,  0,  0,
    -10,  0,  0,  5,  5,  0,  0,-10,  0,  0,  0,  0,  0,  0,  0,  0,
    -10,  0,  5, 10, 10,  5,  0,-10,  0,  0,  0,  0,  0,  0,  0,  0,
    -10,  0,  5, 10, 10,  5,  0,-10,  0,  0,  0,  0,  0,  0,  0,  0,
    -10,  0,  0,  5,  5,  0,  0,-10,  0,  0,  0,  0,  0,  0,  0,  0,
    -15,  0,  0,  0,  0,  0,  0,-15,  0,  0,  0,  0,  0,  0,  0,  0,
    -20,-15,-10,-10,-10,-10,-15,-20,  0,  0,  0,  0,  0,  0,  0,  0 },

    { // rook
     -6, -3,  0,  3,  3,  0, -3, -6,  0,  0,  0,  0,  0,  0,  0,  0,
     -6, -3,  0,  3,  3,  0, -3, -6,  0,  0,  0,  0,  0,  0,  0,  0,
     -6, -3,  0,  3,  3,  0, -3, -6,  0,  0,  0,  0,  0,  0,  0,  0,
     -6, -3,  0,  3,  3,  0, -3, -6,  0,  0,  0,  0,  0,  0,  0,  0,
     -6, -3,  0,  3,  3,  0, -3, -6,  0,  0,  0,  0,  0,  0,  0,  0,
     -6, -3,  0,  3,  3,  0, -3, -6,  0,  0,  0,  0,  0,  0,  0,  0,
     -6, -3,  0,  3,  3,  0, -3, -6,  0,  0,  0,  0,  0,  0,  0,  0,
     -6, -3,  0,  3,  3,  0, -3, -6,  0,  0,  0,  0,  0,  0,  0,  0 },

    { // queen
    -10, -5, -5, -5, -5, -5, -5,-10,  0,  0,  0,  0,  0,  0,  0,  0,
     -5,  0,  0,  0,  0,  0,  0, -5,  0,  0,  0,  0,  0,  0,  0,  0,
     -5,  0,  0,  0,  0,  0,  0, -5,  0,  0,  0,  0,  0,  0,  0,  0,
     -5,  0,  0,  0,  0,  0,  0, -5,  0,  0,  0,  0,  0,  0,  0,  0,
     -5,  0,  0,  0,  0,  0,  0, -5,  0,  0,  0,  0,  0,  0,  0,  0,
     -5,  0,  0,  0,  0,  0,  0, -5,  0,  0,  0,  0,  0,  0,  0,  0,
     -5,  0,  0,  0,  0,  0,  0, -5,  0,  0,  0,  0,  0,  0,  0,  0,
    -10, -5, -5, -5, -5, -5, -5,-10,  0,  0,  0,  0,  0,  0,  0,  0 },

    { // king
    -30,-40,-40,-50,-50,-40,-40,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -30,-40,-40,-50,-50,-40,-40,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -30,-40,-40,-50,-50,-40,-40,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -30,-40,-40,-50,-50,-40,-40,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -20,-30,-30,-40,-40,-30,-30,-20,  0,  0,  0,  0,  0,  0,  0,  0,
    -10,-20,-20,-20,-20,-20,-20,-10,  0,  0,  0,  0,  0,  0,  0,  0,
     20, 20,  0,  0,  0,  0, 20, 20,  0,  0,  0,  0,  0,  0,  0,  0,
     20, 30, 10,  0,  0, 10, 30, 20,  0,  0,  0,  0,  0,  0,  0,  0 }

    // mirror piece tables are filled in during init_eval
};


int endgame_piece_square_values[BK+1][0x80] = {
    {}, {}, {}, {}, {}, {}, {}, {}, {}, // empties to get indexing right
    { // pawn
      0,  0,  0,  0,  0,  0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0,
     -5,  0,  0,  0,  0,  0,  0, -5, 0, 0, 0, 0, 0, 0, 0, 0,
     -5,  0,  0,  0,  0,  0,  0, -5, 0, 0, 0, 0, 0, 0, 0, 0,
     -5,  0,  0,  0,  0,  0,  0, -5, 0, 0, 0, 0, 0, 0, 0, 0,
     -5,  0,  0,  0,  0,  0,  0, -5, 0, 0, 0, 0, 0, 0, 0, 0,
     -5,  0,  0,  0,  0,  0,  0, -5, 0, 0, 0, 0, 0, 0, 0, 0,
     -5,  0,  0,  0,  0,  0,  0, -5, 0, 0, 0, 0, 0, 0, 0, 0,
      0,  0,  0,  0,  0,  0,  0,  0, 0, 0, 0, 0, 0, 0, 0, 0 },

    { // knight
    -50,-40,-30,-30,-30,-30,-40,-50,  0,  0,  0,  0,  0,  0,  0,  0,
    -40,-20,  0,  0,  0,  0,-20,-40,  0,  0,  0,  0,  0,  0,  0,  0,
    -30,  0, 10, 15, 15, 10,  0,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -30,  5, 15, 20, 20, 15,  5,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -30,  0, 15, 20, 20, 15,  0,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -30,  5, 10, 15, 15, 10,  5,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -40,-20,  0,  5,  5,  0,-20,-40,  0,  0,  0,  0,  0,  0,  0,  0,
    -50,-40,-30,-30,-30,-30,-40,-50,  0,  0,  0,  0,  0,  0,  0,  0 },

    { // bishop
    -30,-25,-20,-20,-20,-20,-25,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -25,  0,  0,  0,  0,  0,  0,-25,  0,  0,  0,  0,  0,  0,  0,  0,
    -10,  0,  0,  5,  5,  0,  0,-10,  0,  0,  0,  0,  0,  0,  0,  0,
    -10,  0,  5, 10, 10,  5,  0,-10,  0,  0,  0,  0,  0,  0,  0,  0,
    -10,  0,  5, 10, 10,  5,  0,-10,  0,  0,  0,  0,  0,  0,  0,  0,
    -10,  0,  0,  5,  5,  0,  0,-10,  0,  0,  0,  0,  0,  0,  0,  0,
    -15,  0,  0,  0,  0,  0,  0,-15,  0,  0,  0,  0,  0,  0,  0,  0,
    -20,-15,-10,-10,-10,-10,-15,-20,  0,  0,  0,  0,  0,  0,  0,  0 },

    { // rook
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },

    { // queen
    -30,-25,-20,-20,-20,-20,-25,-30,  0,  0,  0,  0,  0,  0,  0,  0,
    -25,-15, -5,  0,  0, -5,-15,-25,  0,  0,  0,  0,  0,  0,  0,  0,
    -20, -5,  0, 10, 10,  0, -5,-10,  0,  0,  0,  0,  0,  0,  0,  0,
    -20,  0, 10, 20, 20, 10,  0,-10,  0,  0,  0,  0,  0,  0,  0,  0,
    -20,  0, 10, 20, 20, 10,  0,-10,  0,  0,  0,  0,  0,  0,  0,  0,
    -20, -5,  5, 10, 10,  5, -5,-10,  0,  0,  0,  0,  0,  0,  0,  0,
    -25,-15, -5,  0,  0, -5,-15,-25,  0,  0,  0,  0,  0,  0,  0,  0,
    -30,-25,-20,-20,-20,-20,-25,-30,  0,  0,  0,  0,  0,  0,  0,  0 },

    { // king
    -50,-40,-30,-20,-20,-30,-40,-50, 0, 0, 0, 0, 0, 0, 0, 0,
    -30,-20,-10,  0,  0,-10,-20,-30, 0, 0, 0, 0, 0, 0, 0, 0,
    -30,-10, 20, 30, 30, 20,-10,-30, 0, 0, 0, 0, 0, 0, 0, 0,
    -30,-10, 30, 40, 40, 30,-10,-30, 0, 0, 0, 0, 0, 0, 0, 0,
    -30,-10, 30, 40, 40, 30,-10,-30, 0, 0, 0, 0, 0, 0, 0, 0,
    -30,-10, 20, 30, 30, 20,-10,-30, 0, 0, 0, 0, 0, 0, 0, 0,
    -30,-30,  0,  0,  0,  0,-30,-30, 0, 0, 0, 0, 0, 0, 0, 0,
    -50,-30,-30,-30,-30,-30,-30,-50, 0, 0, 0, 0, 0, 0, 0, 0 }

    // mirror piece tables are filled in during init_eval
};

