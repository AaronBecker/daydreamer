#!/usr/bin/env python
import os
from subprocess import Popen, PIPE
import sys
import optparse

engine_prefix = '/Users/abecker/work/misc_code/chess_engines/'
cutechess_path = '/Users/abecker/work/misc_code/cutechess-cli/cutechess-cli.sh'
daydreamer_path = '/Users/abecker/work/code/daydreamer/'
programs = {
    'roce' : 'cmd=' + engine_prefix + 'roce38m/roce38_32 proto=uci',
    'tscp' : 'cmd=' + engine_prefix + 'tscp181/tscp proto=xboard name=tscp',
    #'gnuchess' : 'cmd=gnuchess' + ' proto=xboard' + ' name=gnuchess',
    'mediocre' : 'cmd=' + engine_prefix + \
            'mediocre_v0/mediocre.sh proto=uci',
    'clarabit' : 'cmd=' + engine_prefix + 'Clarabit_x32_win/clarabit.sh proto=uci',
    'amundsen' : 'cmd=' + engine_prefix + 'amundsen-0.80/amundsen' + \
            ' proto=xboard name="Amundsen 0.80"',
    'bikjump' : 'cmd=' + engine_prefix + 'bikjump32/bikjump.sh proto=uci',
    'bison' : 'cmd=' + engine_prefix + 'bison/bison.sh  proto=uci',
    'greko' : 'cmd=' + engine_prefix + 'greko-6.5/bin/greko proto=uci name=greko',
    'vicki' : 'cmd=' + engine_prefix + 'vicki0.041a/vicki.sh' + \
            ' proto=xboard name=Vicki'
    }

def main(argv=None):
    if argv is None:
        argv = sys.argv[1:]

    parser = optparse.OptionParser(
        formatter=optparse.TitledHelpFormatter(width=78),
        add_help_option=None)

    # define options here:
    parser.add_option(
        '--debug', action='store_true', dest='debug',
        help='Show all input and output during games.')

    settings, args = parser.parse_args(argv)

    engines = args[0].split(',')
    primary_engine, engines = engines[0], engines[1:]
    timecontrol = args[1]
    gamecount = args[2]
    outfile_base = args[3]
    logfile = open(outfile_base + '.log', 'w')
    summary = open(outfile_base + '.summary', 'w')
    if not programs.has_key(primary_engine):
        pr_eng_str = 'cmd=' + daydreamer_path + primary_engine + ' proto=uci'
    else:
        pr_eng_str = programs[primary_engine]
    for engine in engines:
        if not programs.has_key(engine):
            sec_eng_str = 'cmd=' + daydreamer_path + engine + ' proto=uci'
        else:
            sec_eng_str = programs[engine]
        cutechess_args = '-pgnin tests/NoomenTestsuite2008.pgn ' + \
                '-fcp ' + pr_eng_str + ' -scp ' + \
                sec_eng_str + ' -both tc=' + timecontrol + \
                ' -games ' + gamecount + ' -pgnout ' + outfile_base + '.pgn'
        if settings.debug:
            cutechess_args += ' -debug'
        #'-book tests/performance.bin -bookdepth 12 ' + \
        command = cutechess_path + " " + cutechess_args
        print command
        logfile.write(command + '\n')
        output, error = Popen(command, shell=True, stdout=PIPE).communicate()
        print output
        logfile.write(output + '\n')
        if error is not None:
            print error
            logfile.write(error + '\n')
        summary.write(output.split('\n')[-3] + '\n')

if __name__ == "__main__":
    status = main()
    sys.exit(status)
